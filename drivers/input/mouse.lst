     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_wait_KBC_sendready
     7 00000000                                 	EXTERN	_outb
     8 00000000                                 [FILE "mouse.c"]
     9                                          [SECTION .text]
    10 00000000                                 	GLOBAL	_init_mouse
    11 00000000                                 _init_mouse:
    12 00000000 55                              	PUSH	EBP
    13 00000001 89 E5                           	MOV	EBP,ESP
    14 00000003 E8 [00000000]                   	CALL	_wait_KBC_sendready
    15 00000008 68 000000D4                     	PUSH	212
    16 0000000D 6A 64                           	PUSH	100
    17 0000000F E8 [00000000]                   	CALL	_outb
    18 00000014 E8 [00000000]                   	CALL	_wait_KBC_sendready
    19 00000019 68 000000F4                     	PUSH	244
    20 0000001E 6A 60                           	PUSH	96
    21 00000020 E8 [00000000]                   	CALL	_outb
    22 00000025 C6 05 [00000003] 00             	MOV	BYTE [_mouse_dec+3],0
    23 0000002C C9                              	LEAVE
    24 0000002D C3                              	RET
    25 0000002E                                 	GLOBAL	_mouse_decode
    26 0000002E                                 _mouse_decode:
    27 0000002E 55                              	PUSH	EBP
    28 0000002F 89 E5                           	MOV	EBP,ESP
    29 00000031 53                              	PUSH	EBX
    30 00000032 83 EC 20                        	SUB	ESP,32
    31 00000035 8A 15 [00000003]                	MOV	DL,BYTE [_mouse_dec+3]
    32 0000003B 8B 4D 08                        	MOV	ECX,DWORD [8+EBP]
    33 0000003E 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
    34 00000041 84 D2                           	TEST	DL,DL
    35 00000043 75 16                           	JNE	L3
    36 00000045 80 FB FA                        	CMP	BL,-6
    37 00000048 74 08                           	JE	L11
    38 0000004A                                 L5:
    39 0000004A 31 C0                           	XOR	EAX,EAX
    40 0000004C                                 L2:
    41 0000004C 83 C4 20                        	ADD	ESP,32
    42 0000004F 5B                              	POP	EBX
    43 00000050 5D                              	POP	EBP
    44 00000051 C3                              	RET
    45 00000052                                 L11:
    46 00000052 C6 05 [00000003] 01             	MOV	BYTE [_mouse_dec+3],1
    47 00000059 EB EF                           	JMP	L5
    48 0000005B                                 L3:
    49 0000005B 0F B6 C2                        	MOVZX	EAX,DL
    50 0000005E 80 FA 03                        	CMP	DL,3
    51 00000061 88 98 [FFFFFFFF]                	MOV	BYTE [_mouse_dec-1+EAX],BL
    52 00000067 74 0A                           	JE	L12
    53 00000069 8D 42 01                        	LEA	EAX,DWORD [1+EDX]
    54 0000006C A2 [00000003]                   	MOV	BYTE [_mouse_dec+3],AL
    55 00000071 EB D7                           	JMP	L5
    56 00000073                                 L12:
    57 00000073 C6 05 [00000003] 01             	MOV	BYTE [_mouse_dec+3],1
    58 0000007A 85 C9                           	TEST	ECX,ECX
    59 0000007C 74 CC                           	JE	L5
    60 0000007E A0 [00000000]                   	MOV	AL,BYTE [_mouse_dec]
    61 00000083 83 E0 07                        	AND	EAX,7
    62 00000086 0F B6 C0                        	MOVZX	EAX,AL
    63 00000089 89 41 08                        	MOV	DWORD [8+ECX],EAX
    64 0000008C 0F B6 15 [00000001]             	MOVZX	EDX,BYTE [_mouse_dec+1]
    65 00000093 89 11                           	MOV	DWORD [ECX],EDX
    66 00000095 0F B6 05 [00000002]             	MOVZX	EAX,BYTE [_mouse_dec+2]
    67 0000009C 89 41 04                        	MOV	DWORD [4+ECX],EAX
    68 0000009F A0 [00000000]                   	MOV	AL,BYTE [_mouse_dec]
    69 000000A4 83 E0 10                        	AND	EAX,16
    70 000000A7 84 C0                           	TEST	AL,AL
    71 000000A9 74 08                           	JE	L8
    72 000000AB 81 CA FFFFFF00                  	OR	EDX,-256
    73 000000B1 89 11                           	MOV	DWORD [ECX],EDX
    74 000000B3                                 L8:
    75 000000B3 A0 [00000000]                   	MOV	AL,BYTE [_mouse_dec]
    76 000000B8 83 E0 20                        	AND	EAX,32
    77 000000BB 84 C0                           	TEST	AL,AL
    78 000000BD 74 07                           	JE	L9
    79 000000BF 81 49 04 FFFFFF00               	OR	DWORD [4+ECX],-256
    80 000000C6                                 L9:
    81 000000C6 F7 59 04                        	NEG	DWORD [4+ECX]
    82 000000C9 B8 00000001                     	MOV	EAX,1
    83 000000CE E9 FFFFFF79                     	JMP	L2
    84                                          [SECTION .data]
    85 00000000                                 	ALIGNB	4
    86 00000000                                 _mouse_dec:
    87 00000000 00 00 00 00                     	RESB	4
