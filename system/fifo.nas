[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_fifo_head
	EXTERN	_strcmp
[FILE "fifo.c"]
[SECTION .data]
	ALIGNB	4
_fifo_head:
	DD	_fifo_head
	DD	_fifo_head
[SECTION .text]
	GLOBAL	_put_bdata_fifo
_put_bdata_fifo:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	PUSH	EBX
	MOV	AL,BYTE [8+EBP]
	MOV	ESI,DWORD [12+EBP]
	MOV	BYTE [-9+EBP],AL
	MOV	EAX,DWORD [_fifo_head]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-152+EAX]
	JE	L11
L9:
	PUSH	ESI
	PUSH	DWORD [EBX]
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L12
	MOV	EAX,DWORD [152+EBX]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-152+EAX]
	JNE	L9
L11:
	MOV	EAX,-2
L1:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L12:
	MOV	EDX,DWORD [16+EBX]
	TEST	EDX,EDX
	JNE	L7
	OR	DWORD [20+EBX],1
	OR	EAX,-1
	JMP	L1
L7:
	MOV	EAX,DWORD [8+EBX]
	MOV	CL,BYTE [-9+EBP]
	MOV	BYTE [24+EAX+EBX*1],CL
	INC	EAX
	MOV	DWORD [8+EBX],EAX
	CMP	EAX,DWORD [12+EBX]
	JL	L8
	MOV	DWORD [8+EBX],0
L8:
	LEA	EAX,DWORD [-1+EDX]
	MOV	DWORD [16+EBX],EAX
	XOR	EAX,EAX
	JMP	L1
	GLOBAL	_get_bdata_fifo
_get_bdata_fifo:
	PUSH	EBP
	MOV	EAX,DWORD [_fifo_head]
	MOV	EBP,ESP
	CMP	EAX,_fifo_head
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [8+EBP]
	LEA	EBX,DWORD [-152+EAX]
	JE	L23
L21:
	PUSH	ESI
	PUSH	DWORD [EBX]
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L24
	MOV	EAX,DWORD [152+EBX]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-152+EAX]
	JNE	L21
L23:
	OR	EAX,-1
L13:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L24:
	MOV	ESI,DWORD [16+EBX]
	MOV	EDX,DWORD [12+EBX]
	OR	EAX,-1
	CMP	ESI,EDX
	JE	L13
	MOV	EAX,DWORD [4+EBX]
	MOVZX	ECX,BYTE [24+EAX+EBX*1]
	INC	EAX
	MOV	DWORD [4+EBX],EAX
	CMP	EAX,EDX
	JL	L20
	MOV	DWORD [4+EBX],0
L20:
	LEA	EAX,DWORD [1+ESI]
	MOV	DWORD [16+EBX],EAX
	MOV	EAX,ECX
	JMP	L13
	GLOBAL	_fifo_status
_fifo_status:
	PUSH	EBP
	MOV	EAX,DWORD [_fifo_head]
	MOV	EBP,ESP
	CMP	EAX,_fifo_head
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [8+EBP]
	LEA	EBX,DWORD [-152+EAX]
	JE	L33
L31:
	PUSH	ESI
	PUSH	DWORD [EBX]
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L34
	MOV	EAX,DWORD [152+EBX]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-152+EAX]
	JNE	L31
L33:
	XOR	EAX,EAX
L25:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L34:
	MOV	EAX,DWORD [12+EBX]
	SUB	EAX,DWORD [16+EBX]
	JMP	L25
	GLOBAL	_register_fifo
_register_fifo:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,DWORD [8+EBP]
	PUSH	EBX
	MOV	EDI,DWORD [12+EBP]
	TEST	ESI,ESI
	JE	L36
	MOV	EAX,DWORD [_fifo_head]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-152+EAX]
	JE	L46
L42:
	PUSH	EDI
	PUSH	DWORD [EBX]
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L47
	MOV	EAX,DWORD [152+EBX]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-152+EAX]
	JNE	L42
L46:
	LEA	EAX,DWORD [152+ESI]
	MOV	EDX,DWORD [_fifo_head]
	MOV	DWORD [152+ESI],EDX
	MOV	DWORD [ESI],EDI
	MOV	DWORD [4+EDX],EAX
	MOV	DWORD [_fifo_head],EAX
	MOV	DWORD [12+ESI],128
	MOV	DWORD [8+ESI],0
	MOV	DWORD [4+ESI],0
	MOV	DWORD [20+ESI],0
	MOV	DWORD [4+EAX],_fifo_head
L47:
	XOR	EAX,EAX
L35:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L36:
	OR	EAX,-1
	JMP	L35
