[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_fifo_head
	EXTERN	_strcmp
[FILE "fifo.c"]
[SECTION .data]
	ALIGNB	4
_fifo_head:
	DD	_fifo_head
	DD	_fifo_head
[SECTION .text]
	GLOBAL	_put_bdata_fifo
_put_bdata_fifo:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	PUSH	EBX
	MOV	AL,BYTE [8+EBP]
	MOV	ESI,DWORD [12+EBP]
	MOV	BYTE [-9+EBP],AL
	MOV	EAX,DWORD [_fifo_head]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-72+EAX]
	JE	L10
L8:
	PUSH	ESI
	PUSH	DWORD [EBX]
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L4
	MOV	EAX,DWORD [4+EBX]
	CMP	EAX,63
	JG	L4
	MOV	DL,BYTE [-9+EBP]
	MOV	BYTE [8+EBX+EAX*1],DL
	INC	EAX
	MOV	DWORD [4+EBX],EAX
L4:
	MOV	EAX,DWORD [72+EBX]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-72+EAX]
	JNE	L8
L10:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
	GLOBAL	_get_bdata_fifo
_get_bdata_fifo:
	PUSH	EBP
	MOV	EAX,DWORD [_fifo_head]
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	MOV	EDI,DWORD [8+EBP]
	LEA	EBX,DWORD [-72+EAX]
	CMP	EAX,_fifo_head
	JE	L24
L22:
	PUSH	EDI
	PUSH	DWORD [EBX]
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L14
	XOR	ECX,ECX
	MOV	EDX,DWORD [4+EBX]
	MOVZX	ESI,BYTE [8+EBX]
	CMP	ECX,EDX
	JGE	L26
L21:
	MOV	AL,BYTE [9+ECX+EBX*1]
	MOV	BYTE [8+EBX+ECX*1],AL
	INC	ECX
	CMP	ECX,EDX
	JL	L21
L26:
	LEA	EAX,DWORD [-1+EDX]
	MOV	DWORD [4+EBX],EAX
L14:
	MOV	EAX,DWORD [72+EBX]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-72+EAX]
	JNE	L22
L24:
	LEA	ESP,DWORD [-12+EBP]
	MOV	EDX,ESI
	POP	EBX
	POP	ESI
	POP	EDI
	MOVSX	EAX,DL
	POP	EBP
	RET
	GLOBAL	_put_wdata_fifo
_put_wdata_fifo:
	PUSH	EBP
	MOV	EBP,ESP
	POP	EBP
	RET
	GLOBAL	_put_dwdata_fifo
_put_dwdata_fifo:
	PUSH	EBP
	MOV	EBP,ESP
	POP	EBP
	RET
	GLOBAL	_fifo_status
_fifo_status:
	PUSH	EBP
	MOV	EAX,DWORD [_fifo_head]
	MOV	EBP,ESP
	CMP	EAX,_fifo_head
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [8+EBP]
	LEA	EBX,DWORD [-72+EAX]
	JE	L38
L36:
	PUSH	ESI
	PUSH	DWORD [EBX]
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L32
	MOV	EAX,DWORD [4+EBX]
	CMP	EAX,63
	JLE	L29
L32:
	MOV	EAX,DWORD [72+EBX]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-72+EAX]
	JNE	L36
L38:
	XOR	EAX,EAX
L29:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
	GLOBAL	_register_fifo
_register_fifo:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,DWORD [8+EBP]
	PUSH	EBX
	MOV	EDI,DWORD [12+EBP]
	TEST	ESI,ESI
	JE	L40
	MOV	EAX,DWORD [_fifo_head]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-72+EAX]
	JE	L50
L46:
	PUSH	EDI
	PUSH	DWORD [EBX]
	CALL	_strcmp
	POP	EDX
	POP	ECX
	TEST	EAX,EAX
	JE	L51
	MOV	EAX,DWORD [72+EBX]
	CMP	EAX,_fifo_head
	LEA	EBX,DWORD [-72+EAX]
	JNE	L46
L50:
	LEA	EAX,DWORD [72+ESI]
	MOV	EDX,DWORD [72+EBX]
	LEA	ECX,DWORD [72+EBX]
	MOV	DWORD [72+ESI],EDX
	MOV	DWORD [4+EDX],EAX
	MOV	DWORD [ESI],EDI
	MOV	DWORD [4+ESI],0
	MOV	DWORD [4+EAX],ECX
	MOV	DWORD [72+EBX],EAX
L51:
	XOR	EAX,EAX
L39:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L40:
	OR	EAX,-1
	JMP	L39
