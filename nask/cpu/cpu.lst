     1 00000000                                 ;nask function
     2 00000000                                 
     3 00000000                                 ;TAB=4
     4 00000000                                 
     5 00000000                                 
     6 00000000                                 [FORMAT "WCOFF"]    ;制作目标文件的模式
     7 00000000                                 [INSTRSET "i486p"]  ;使用i486为止的指令
     8 00000000                                 [BITS 32]           ;制作32位机器语言
     9 00000000                                 
    10 00000000                                 ;制作目标文件的信息
    11 00000000                                 
    12 00000000                                 [FILE "naskcpu.nas"]    ;文件名
    13 00000000                                 
    14 00000000                                         GLOBAL  _cpu_hlt
    15 00000000                                         GLOBAL  _write_mem_8bits   ;程序中包含的函数名
    16 00000000                                         GLOBAL  _cpu_irq_disable, _cpu_irq_enable
    17 00000000                                         GLOBAL  _outb, _inb
    18 00000000                                         GLOBAL  _load_gdtr, _load_idtr ;设置段描述表和中断描述表
    19 00000000                                 
    20 00000000                                         GLOBAL  _io_cli, _io_sti, _io_load_eflags, _io_store_eflags     ;开关中断函数集
    21 00000000                                         GLOBAL  _asm_irq_handler1, _asm_irq_handler7, _asm_irq_handler12
    22 00000000                                         EXTERN  _irq_handler1, _irq_handler7, _irq_handler12        
    23 00000000                                 
    24 00000000                                 ;实际函数
    25 00000000                                 
    26                                          [SECTION .text]     ;放入text段
    27 00000000                                 
    28 00000000                                 _cpu_hlt: ;void cpu_hlt(void)
    29 00000000 F4                                      HLT
    30 00000001 C3                                      RET
    31 00000002                                 
    32 00000002                                 _write_mem_8bits:      ;void write_mem_8bits(int addr, int val)
    33 00000002 8B 4C 24 04                             MOV     ECX,[ESP+4]
    34 00000006 8A 44 24 08                             MOV     AL,[ESP+8]
    35 0000000A 88 01                                   MOV     [ECX],AL
    36 0000000C C3                                      RET
    37 0000000D                                 _outb:
    38 0000000D 8B 54 24 04                             MOV     EDX,[ESP+4]
    39 00000011 8A 44 24 08                             MOV     AL,[ESP+8]
    40 00000015 EE                                      OUT     DX,AL
    41 00000016 C3                                      RET
    42 00000017                                 _inb:
    43 00000017 8B 54 24 04                     		MOV		EDX,[ESP+4]
    44 0000001B B8 00000000                     		MOV		EAX,0
    45 00000020 EC                              		IN		AL,DX
    46 00000021 C3                              		RET
    47 00000022                                 _cpu_irq_disable:
    48 00000022 9C                                      PUSHFD  
    49 00000023 58                                      POP     EAX
    50 00000024 A3 [00000000]                           MOV     DWORD [_cpu_sr],EAX
    51 00000029 FA                                      CLI
    52 0000002A C3                                      RET
    53 0000002B                                 _cpu_irq_enable:
    54 0000002B A1 [00000000]                           MOV     EAX,[_cpu_sr]
    55 00000030 50                                      PUSH    EAX
    56 00000031 9D                                      POPFD
    57 00000032 C3                                      RET
    58 00000033                                 
    59 00000033                                 
    60 00000033                                 _io_cli:
    61 00000033 FA                                      CLI
    62 00000034 C3                                      RET
    63 00000035                                 _io_sti:
    64 00000035 FB                                      STI
    65 00000036 C3                                      RET
    66 00000037                                         
    67 00000037                                 _io_load_eflags:
    68 00000037 9C                                      PUSHFD
    69 00000038 58                                      POP     EAX
    70 00000039 C3                                      RET
    71 0000003A                                 _io_store_eflags:
    72 0000003A 8B 44 24 04                             MOV     EAX,[ESP+4]
    73 0000003E 50                                      PUSH    EAX
    74 0000003F 9D                                      POPFD
    75 00000040 C3                                      RET
    76 00000041                                 
    77 00000041                                 _load_gdtr:     ;void load_gdtr(int limit, int addr)
    78 00000041 66 8B 44 24 04                          MOV     AX,[ESP+4]
    79 00000046 66 89 44 24 06                          MOV     [ESP+6],AX
    80 0000004B 0F 01 54 24 06                          LGDT    [ESP+6]
    81 00000050 C3                                      RET
    82 00000051                                 _load_idtr:     ;void load_idtr(int limit, int addr)
    83 00000051 66 8B 44 24 04                          MOV     AX,[ESP+4]
    84 00000056 66 89 44 24 06                          MOV     [ESP+6],AX
    85 0000005B 0F 01 5C 24 06                          LIDT    [ESP+6]
    86 00000060 C3                                      RET
    87 00000061                                 
    88 00000061                                 _asm_irq_handler1:
    89 00000061 06                                      PUSH    ES
    90 00000062 1E                                      PUSH    DS
    91 00000063 60                                      PUSHAD
    92 00000064 89 E0                                   MOV     EAX,ESP
    93 00000066 50                                      PUSH    EAX
    94 00000067 66 8C D0                                MOV     AX,SS
    95 0000006A 8E D8                                   MOV     DS,AX
    96 0000006C 8E C0                                   MOV     ES,AX
    97 0000006E E8 [00000000]                           CALL    _irq_handler1
    98 00000073 58                                      POP     EAX
    99 00000074 61                                      POPAD
   100 00000075 1F                                      POP     DS
   101 00000076 07                                      POP     ES
   102 00000077 CF                                      IRETD
   103 00000078                                 
   104 00000078                                 _asm_irq_handler7:
   105 00000078 06                                      PUSH    ES
   106 00000079 1E                                      PUSH    DS
   107 0000007A 60                                      PUSHAD
   108 0000007B 89 E0                                   MOV     EAX,ESP
   109 0000007D 50                                      PUSH    EAX
   110 0000007E 66 8C D0                                MOV     AX,SS
   111 00000081 8E D8                                   MOV     DS,AX
   112 00000083 8E C0                                   MOV     ES,AX
   113 00000085 E8 [00000000]                           CALL    _irq_handler7
   114 0000008A 58                                      POP     EAX
   115 0000008B 61                                      POPAD
   116 0000008C 1F                                      POP     DS
   117 0000008D 07                                      POP     ES
   118 0000008E CF                                      IRETD
   119 0000008F                                 
   120 0000008F                                 _asm_irq_handler12:
   121 0000008F 06                                      PUSH    ES
   122 00000090 1E                                      PUSH    DS
   123 00000091 60                                      PUSHAD
   124 00000092 89 E0                                   MOV     EAX,ESP
   125 00000094 50                                      PUSH    EAX
   126 00000095 66 8C D0                                MOV     AX,SS
   127 00000098 8E D8                                   MOV     DS,AX
   128 0000009A 8E C0                                   MOV     ES,AX
   129 0000009C E8 [00000000]                           CALL    _irq_handler12
   130 000000A1 58                                      POP     EAX
   131 000000A2 61                                      POPAD
   132 000000A3 1F                                      POP     DS
   133 000000A4 07                                      POP     ES
   134 000000A5 CF                                      IRETD
   135 000000A6                                 
   136 000000A6                                 
   137                                          [SECTION .data]
   138 00000000                                         ALIGNB  4
   139 00000000                                 _cpu_sr:
   140 00000000 00 00 00 00                             RESB    4
