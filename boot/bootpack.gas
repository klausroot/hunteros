	.file	"bootpack.c"
	.data
LC0:
	.ascii "Hunter OS -- V1.0\0"
LC1:
	.ascii "-- Create by lichao.\0"
LC2:
	.ascii "Screen size : %d x %d.\0"
LC3:
	.ascii "keyboard\0"
LC4:
	.ascii "mouse\0"
LC6:
	.ascii "[lrc %4d %4d]\0"
LC7:
	.ascii "(%3d, %3d)\0"
LC5:
	.ascii "%02x\0"
	.text
	.balign 2
.globl _os_entry
	.def	_os_entry;	.scl	2;	.type	32;	.endef
_os_entry:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$2, %esi
	pushl	%ebx
	leal	-76(%ebp), %ebx
	subl	$340, %esp
	call	_init_gdt_idt
	call	_init_pic
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_init_screen
	pushl	$LC0
	pushl	$7
	pushl	$48
	pushl	$5
	call	_draw_ascii_font8
	pushl	$LC1
	pushl	$7
	pushl	$64
	pushl	$5
	call	_draw_ascii_font8
	addl	$44, %esp
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	$LC2
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$7
	leal	-332(%ebp), %ebx
	pushl	$80
	pushl	$5
	call	_draw_ascii_font8
	addl	$32, %esp
	pushl	$249
	pushl	$33
	call	_outb
	pushl	$239
	pushl	$161
	call	_outb
	pushl	$14
	pushl	%ebx
	call	_init_mouse_cursor8
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	movl	$2, %ecx
	cltd
	idivl	%esi
	movl	%eax, %edi
	movswl	4086,%eax
	pushl	$16
	leal	-44(%eax), %esi
	pushl	%ebx
	movl	%esi, %eax
	cltd
	idivl	%ecx
	pushl	%eax
	movl	%eax, %esi
	pushl	%edi
	pushl	$16
	pushl	$16
	call	_draw_block8_8
	addl	$48, %esp
	call	_init_keyboard
	call	_init_mouse
	pushl	$LC3
	pushl	$_keyboard_fifo
	call	_register_fifo
	pushl	$LC4
	pushl	$_mouse_fifo
	call	_register_fifo
L23:
	addl	$16, %esp
L18:
	call	_io_cli
	pushl	$LC3
	call	_fifo_status
	popl	%edx
	testl	%eax, %eax
	jne	L5
	pushl	$LC4
	call	_fifo_status
	popl	%ebx
	testl	%eax, %eax
	je	L24
L5:
	pushl	$LC3
	call	_fifo_status
	popl	%ecx
	testl	%eax, %eax
	jne	L25
	pushl	$LC4
	call	_fifo_status
	popl	%edx
	testl	%eax, %eax
	je	L18
	pushl	$LC4
	call	_get_bdata_fifo
	movl	%eax, %ebx
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-348(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	addl	$12, %esp
	testl	%eax, %eax
	je	L18
	pushl	-344(%ebp)
	pushl	-348(%ebp)
	pushl	$LC6
	leal	-76(%ebp), %ebx
	pushl	%ebx
	call	_sprintf
	addl	$16, %esp
	movl	-340(%ebp), %eax
	testl	$1, %eax
	je	L11
	movb	$76, -75(%ebp)
L11:
	testl	$2, %eax
	je	L12
	movb	$82, -74(%ebp)
L12:
	andl	$4, %eax
	je	L13
	movb	$67, -73(%ebp)
L13:
	pushl	$31
	pushl	$151
	pushl	$16
	pushl	$32
	pushl	$14
	call	_box_fill
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$32
	call	_draw_ascii_font8
	leal	15(%esi), %eax
	addl	$36, %esp
	pushl	%eax
	leal	15(%edi), %eax
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	$14
	call	_box_fill
	addl	$20, %esp
	addl	-344(%ebp), %esi
	addl	-348(%ebp), %edi
	js	L26
L14:
	testl	%esi, %esi
	js	L27
L15:
	movswl	4084,%eax
	subl	$16, %eax
	cmpl	%eax, %edi
	jle	L16
	movl	%eax, %edi
L16:
	movswl	4086,%eax
	subl	$16, %eax
	cmpl	%eax, %esi
	jle	L17
	movl	%eax, %esi
L17:
	pushl	%esi
	pushl	%edi
	pushl	$LC7
	pushl	%ebx
	call	_sprintf
	pushl	$15
	pushl	$79
	pushl	$0
	pushl	$0
	pushl	$14
	call	_box_fill
	addl	$36, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	call	_draw_ascii_font8
	leal	-332(%ebp), %eax
	pushl	$16
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	$16
	pushl	$16
	call	_draw_block8_8
	addl	$40, %esp
	jmp	L18
L27:
	xorl	%esi, %esi
	jmp	L15
L26:
	xorl	%edi, %edi
	jmp	L14
L25:
	pushl	$LC3
	call	_get_bdata_fifo
	movl	%eax, %ebx
	call	_io_sti
	pushl	%ebx
	leal	-76(%ebp), %ebx
	pushl	$LC5
	pushl	%ebx
	call	_sprintf
	pushl	$31
	pushl	$15
	pushl	$16
	pushl	$0
	pushl	$14
	call	_box_fill
	addl	$36, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	call	_draw_ascii_font8
	jmp	L23
L24:
	call	_io_stihlt
	jmp	L18
.globl _keyboard_fifo
	.data
	.balign 16
_keyboard_fifo:
	.space 160
.globl _mouse_fifo
	.data
	.balign 16
_mouse_fifo:
	.space 160
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_box_fill;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_get_bdata_fifo;	.scl	2;	.type	32;	.endef
	.def	_io_stihlt;	.scl	2;	.type	32;	.endef
	.def	_fifo_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_register_fifo;	.scl	2;	.type	32;	.endef
	.def	_init_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_draw_block8_8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_outb;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_draw_ascii_font8;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdt_idt;	.scl	2;	.type	32;	.endef
